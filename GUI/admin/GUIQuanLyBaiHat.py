import sys
import os
from PyQt6.QtWidgets import (
    QWidget, QVBoxLayout, QPushButton, QTableWidget, QTableWidgetItem,
    QHBoxLayout, QLabel, QLineEdit, QComboBox, QCompleter, QMessageBox
)
from PyQt6.QtGui import QFont, QPixmap
from PyQt6.QtCore import Qt
from admin.GUIThemBaiHat import GUIThemBaiHat
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
from BLL.BLLQuanLy import BLLQuanLy

class GUIQuanLyBaiHat(QWidget):
    def __init__(self):
        super().__init__()
        self.bll = BLLQuanLy()
        self.DSNhac = self.bll.layDanhSachBaiHat()
        self.DSNhacXuat = self.DSNhac
        self.setFixedSize(1250, 650)

        main_layout = QVBoxLayout()
        main_layout.setContentsMargins(0, 0, 0, 0)

        title_layout = QHBoxLayout()
        title_widget = QWidget()
        title_widget.setContentsMargins(0, 0, 0, 0)
        title_widget.setStyleSheet("background-color: #ffffff;")
        title_widget.setLayout(title_layout)

        title_label = QLabel("Danh S√°ch B√†i H√°t")
        title_label.setFont(QFont("Arial", 26, QFont.Weight.Bold))
        title_label.setStyleSheet("color: #000; background-color: transparent;")

        self.btn_them = QPushButton("Th√™m")
        self.btn_them.setStyleSheet("background-color: black; color: white; padding: 10px; font-size: 16px; border-radius: 5px;")
        self.btn_them.clicked.connect(self.BamNutThem)

        # Input t√¨m ki·∫øm t√™n b√†i h√°t
        self.search_title = QLineEdit()
        self.search_title.setPlaceholderText("T√™n b√†i h√°t...")
        self.search_title.setStyleSheet("""
            font-size: 14px;
            padding: 5px;
            color: black;  /* M√†u ch·ªØ khi ng∆∞·ªùi d√πng nh·∫≠p */
            QLineEdit::placeholder {
                color: gray;  /* M√†u c·ªßa placeholder */
                font-size: 14px;
            }
        """)

        # T√¨m ki·∫øm ca sƒ©
        self.search_singer = QComboBox()
        self.search_singer.setStyleSheet("""
            font-size: 16px;  /* Ch·ªØ l·ªõn h∆°n */
            padding: 5px;
            color: black;  /* M√†u ch·ªØ c·ªßa c√°c item */
            QComboBox::item {
                color: black;  /* M√†u ch·ªØ c·ªßa c√°c item */
                font-size: 16px;  /* Ch·ªØ l·ªõn h∆°n trong c√°c item */
            }
            QComboBox::drop-down {
                background-color: white;  /* M√†u n·ªÅn tr·∫Øng cho drop-down */
                border: 1px solid #ccc;  /* Vi·ªÅn nh·∫π cho drop-down */
            }
        """)
        self.search_singer.setFixedWidth(200)
        self.search_singer.setEditable(True)
        singers_list = self.bll.layToanBoTenCaSi()
        singers_list.insert(0, "T·∫•t c·∫£ ca sƒ©")

        # Th√™m t·∫•t c·∫£ ca sƒ© v√†o QComboBox
        self.search_singer.addItems(singers_list)

        # T·∫°o completer v√† g√°n v√†o QComboBox
        completer = QCompleter(singers_list)
        self.search_singer.setCompleter(completer)
        completer.setFilterMode(Qt.MatchFlag.MatchContains)
        completer.setCaseSensitivity(Qt.CaseSensitivity.CaseInsensitive)
        popup = completer.popup()
        popup.setStyleSheet("""
            background-color: white;  /* M√†u n·ªÅn tr·∫Øng c·ªßa completer */
            font-size: 16px;  /* Ch·ªØ l·ªõn h∆°n trong completer */
            color: black;  /* M√†u ch·ªØ ƒëen */
        """)

        search_button = QPushButton("T√¨m ki·∫øm")
        search_button.setStyleSheet("background-color: #2196F3; color: white; padding: 10px; font-size: 16px; border-radius: 5px;")
        search_button.clicked.connect(self.BamTimKiem)
        title_layout.addWidget(title_label)
        title_layout.addWidget(self.search_title)  # Th√™m input t√¨m ki·∫øm t√™n b√†i h√°t
        title_layout.addWidget(self.search_singer)  # Th√™m input t√¨m ki·∫øm ca sƒ©
        title_layout.addWidget(search_button)
        title_layout.addWidget(self.btn_them)

        main_layout.addWidget(title_widget)

        # T·∫°o QWidget ch·ª©a b·∫£ng danh s√°ch b√†i h√°t
        table_widget = QWidget()
        table_widget.setStyleSheet("background-color: #ffffff;")
        table_layout = QVBoxLayout(table_widget)
        table_layout.setContentsMargins(0, 0, 0, 0)
        
        self.table = QTableWidget()
        self.table.setColumnCount(7)  # Th√™m c·ªôt ·∫£nh ·ªü v·ªã tr√≠ 2
        self.table.setHorizontalHeaderLabels(["ID", "·∫¢nh", "Ti√™u ƒê·ªÅ & Ca Sƒ©", "Th·ªÉ Lo·∫°i", "Xu·∫•t X·ª©", "Ng√†y Ph√°t H√†nh", ""])
        self.table.setStyleSheet("""
            background-color: #ffffff;
            gridline-color: transparent;
            border: none;
            font-size: 18px;
            font-family: Arial;
            color: #000;
        """)
        self.table.setColumnWidth(0, 80)   # ID
        self.table.setColumnWidth(1, 100)   # ·∫¢nh
        self.table.setColumnWidth(2, 500)  # Ti√™u ƒê·ªÅ & Ca Sƒ©
        self.table.setColumnWidth(3, 175)  # Th·ªÉ Lo·∫°i
        self.table.setColumnWidth(4, 100)  # Xu·∫•t X·ª©
        self.table.setColumnWidth(5, 180)  # Ng√†y Ph√°t H√†nh
        self.table.setColumnWidth(6, 100)  # N√∫t X√≥a

        self.table.verticalHeader().setVisible(False)
        self.table.verticalHeader().setDefaultSectionSize(80)

        # ƒêi·ªÅu ch·ªânh k√≠ch th∆∞·ªõc c·ªôt

        table_layout.addWidget(self.table)
        main_layout.addWidget(table_widget)

        main_layout.setSpacing(0)

        self.setLayout(main_layout)
        self.layDSNhac()

    def layDSNhac(self):
        # L·∫•y th∆∞ m·ª•c g·ªëc c·ªßa project
        self.table.setRowCount(len(self.DSNhacXuat))

        for row, baiHat in enumerate(self.DSNhacXuat):

            item_id = QTableWidgetItem(f"#{baiHat.getMaBaiHat()}")
            item_id.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
            item_id.setFont(QFont("Arial Black", 20, QFont.Weight.Bold))  # üîπ Ch·ªØ to, ƒë·∫≠m
            self.table.setItem(row, 0, item_id)

            # L·∫•y ƒë∆∞·ªùng d·∫´n ·∫£nh t·ª´ SQL v√† x·ª≠ l√Ω
            duong_dan_sql = baiHat.getAnh().lstrip("\\/")  # X√≥a d·∫•u '\' ho·∫∑c '/' ƒë·∫ßu chu·ªói n·∫øu c√≥

            # Hi·ªÉn th·ªã ·∫£nh trong QLabel
            label_image = QLabel()
            pixmap = QPixmap(duong_dan_sql)
            if not pixmap.isNull():
                pixmap = pixmap.scaled(80, 80, Qt.AspectRatioMode.KeepAspectRatio, Qt.TransformationMode.SmoothTransformation)
                label_image.setPixmap(pixmap)
            else:
                print(f"‚ö†Ô∏è Kh√¥ng th·ªÉ load ·∫£nh: {duong_dan_sql}")
            label_image.setAlignment(Qt.AlignmentFlag.AlignCenter)
            self.table.setCellWidget(row, 1, label_image)

            # Ti√™u ƒë·ªÅ v√† ca sƒ©
            danh_sach_ca_si = [ca_si.split("-", 1)[-1] for ca_si in baiHat.getCaSi()]
            ten_ca_si = ", ".join(danh_sach_ca_si)
            label_tieu_de = QLabel(baiHat.getTieuDe())
            label_tieu_de.setStyleSheet("font-size: 20px; font-weight: bold; color: black;")
            label_ca_si = QLabel(ten_ca_si)
            label_ca_si.setStyleSheet("font-size: 14px; color: gray;")  
            widget_title_casi = QWidget()
            widget_title_casi.setFixedHeight(55)
            layout_title_casi = QVBoxLayout()
            layout_title_casi.setContentsMargins(10, 0, 0, 0)  
            layout_title_casi.addWidget(label_tieu_de)
            layout_title_casi.addWidget(label_ca_si)
            widget_title_casi.setLayout(layout_title_casi)
            self.table.setCellWidget(row, 2, widget_title_casi)

            # Th·ªÉ lo·∫°i
            item_type = QTableWidgetItem(baiHat.getTenTheLoai())
            item_type.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
            self.table.setItem(row, 3, item_type)

            # Xu·∫•t x·ª©
            item_origin = QTableWidgetItem(baiHat.getTenXuatXu())
            item_origin.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
            self.table.setItem(row, 4, item_origin)

            # Ng√†y ph√°t h√†nh
            item_date = QTableWidgetItem(str(baiHat.getNgayPhatHanh()))
            item_date.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
            self.table.setItem(row, 5, item_date)

            # N√∫t X√≥a
            btn_xoa = QPushButton("X√≥a")
            btn_xoa.setStyleSheet("background-color: #FF0000; color: white; padding: 5px; font-size: 14px; border-radius: 3px;")
            self.table.setCellWidget(row, 6, btn_xoa)
            btn_xoa.clicked.connect(lambda checked, ma=baiHat.getMaBaiHat(): self.on_xoa_clicked(ma))

    def on_xoa_clicked(self, ma_bai_hat):
        reply = QMessageBox.question(
            self, "X√°c nh·∫≠n x√≥a", 
            f"B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†i h√°t c√≥ m√£ {ma_bai_hat} kh√¥ng?", 
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No, 
            QMessageBox.StandardButton.No
        )

        if reply == QMessageBox.StandardButton.Yes:
            result = self.bll.xoaBaiHat(ma_bai_hat)  
            if result == "Th√†nh c√¥ng":
                QMessageBox.information(self, "Th√¥ng b√°o", "X√≥a b√†i h√°t th√†nh c√¥ng!")
                self.DSNhacXuat = self.bll.layDanhSachBaiHat()  # C·∫≠p nh·∫≠t l·∫°i danh s√°ch
                self.layDSNhac()  # Load l·∫°i danh s√°ch b√†i h√°t
            else:
                QMessageBox.critical(self, "L·ªói", "X√≥a b√†i h√°t th·∫•t b·∫°i!")

       
    def timKiemBaiHat(self, tenBaiHat: str, tenCaSi: str):
        # L·ªçc danh s√°ch b√†i h√°t theo t√™n b√†i h√°t
        print(tenCaSi)
        filtered_bai_hat = [baiHat for baiHat in self.DSNhac if tenBaiHat.lower() in baiHat.getTieuDe().lower()]
        # L·ªçc th√™m theo t√™n ca sƒ©
        if tenCaSi != "T·∫•t c·∫£ ca sƒ©":
            filtered_bai_hat = [
                baiHat for baiHat in filtered_bai_hat
                if any(tenCaSi.lower() in ca_si.lower() for ca_si in baiHat.getCaSi())
            ]
        self.DSNhacXuat = filtered_bai_hat
        self.layDSNhac()

    def BamTimKiem(self):
        ten_bai_hat = self.search_title.text()  # L·∫•y t√™n b√†i h√°t t·ª´ input
        ten_ca_si = self.search_singer.currentText()  # L·∫•y t√™n ca sƒ© t·ª´ combobox
        self.timKiemBaiHat(ten_bai_hat, ten_ca_si)  # G·ªçi h√†m t√¨m ki·∫øm

    def BamNutThem(self):
        dialog = GUIThemBaiHat(self,self.DSNhac)
        dialog.exec()
